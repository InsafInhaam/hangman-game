const wordLists = {
  html: [
    { word: "element", hint: "Basic building block of HTML" },
    { word: "attribute", hint: "Provides additional information about an element" },
    { word: "doctype", hint: "Defines the document type and version of HTML" },
    { word: "div", hint: "Defines a division or section in HTML" },
    { word: "span", hint: "Used to group inline-elements" },
    { word: "form", hint: "Used to collect user input" },
    { word: "input", hint: "Accepts data from the user" },
    { word: "meta", hint: "Provides metadata about the HTML document" },
    { word: "ul", hint: "Creates an unordered list" },
    { word: "iframe", hint: "Embeds another document within the current HTML" },
    { word: "ol", hint: "Creates an ordered list" },
    { word: "li", hint: "Defines a list item in a list" },
    { word: "a", hint: "Defines a hyperlink to another page or location" },
    { word: "img", hint: "Embeds an image in a document" },
    { word: "src", hint: "Specifies the source of media (like an image)" },
    { word: "alt", hint: "Provides alternative text for images" },
    { word: "h1", hint: "Defines the most important header" },
    { word: "h2", hint: "Defines a secondary header" },
    { word: "h3", hint: "Defines a tertiary header" },
    { word: "p", hint: "Defines a paragraph of text" },
    { word: "br", hint: "Inserts a line break" },
    { word: "strong", hint: "Defines important text, usually bolded" },
    { word: "em", hint: "Defines emphasized text, usually italicized" },
    { word: "header", hint: "Defines the header for a document or section" },
    { word: "footer", hint: "Defines the footer for a document or section" },
    { word: "article", hint: "Defines a self-contained piece of content" },
    { word: "section", hint: "Defines a section in a document" },
    { word: "aside", hint: "Defines content that is tangentially related to the content around it" },
    { word: "nav", hint: "Defines navigation links" },
    { word: "button", hint: "Defines a clickable button" },
    { word: "select", hint: "Defines a dropdown list" },
    { word: "option", hint: "Defines options in a dropdown list" },
    { word: "textarea", hint: "Defines a multiline input field" },
    { word: "label", hint: "Defines a label for an input element" },
    { word: "table", hint: "Defines a table" },
    { word: "tr", hint: "Defines a row in a table" },
    { word: "th", hint: "Defines a header cell in a table" },
    { word: "td", hint: "Defines a data cell in a table" },
    { word: "col", hint: "Specifies column properties for an element" },
    { word: "colgroup", hint: "Groups columns in a table for formatting" },
    { word: "caption", hint: "Defines a title or explanation for a table" },
    { word: "formaction", hint: "Specifies the URL for form submission" },
    { word: "inputtype", hint: "Defines the type of an input element (text, password, etc.)" },
    { word: "action", hint: "Defines the URL to send form data to" },
    { word: "method", hint: "Defines the HTTP method for form submission (GET or POST)" },
    { word: "target", hint: "Specifies where to open the linked document (e.g., _blank)" },
    { word: "style", hint: "Defines an inline style for an HTML element" },
    { word: "script", hint: "Defines embedded JavaScript code" },
    { word: "link", hint: "Defines the relationship between a document and an external resource (e.g., CSS)" },
    { word: "meta", hint: "Defines metadata about the HTML document" },
    { word: "title", hint: "Defines the title of the document, shown in the browser's title bar" },
    { word: "body", hint: "Defines the main content of the HTML document" },
    { word: "html", hint: "Defines the root element of an HTML document" },
    { word: "head", hint: "Contains metadata and links to external resources" }
  ],
  css: [
    { word: "margin", hint: "Space outside the border of an element" },
    { word: "padding", hint: "Space between content and border" },
    { word: "flexbox", hint: "A layout module in CSS" },
    { word: "grid", hint: "Two-dimensional layout system" },
    { word: "selector", hint: "Pattern used to select elements" },
    { word: "hover", hint: "State triggered when the mouse pointer is over an element", },
    { word: "media", hint: "Used for responsive designs" },
    { word: "animation", hint: "Defines keyframe animations" },
    { word: "z-index", hint: "Specifies the stack order of elements" },
    { word: "opacity", hint: "Controls the transparency level" },
  ],
  javascript: [
    { word: "closure", hint: "A function with preserved scope" },
    { word: "promise", hint: "Represents a future value" },
    { word: "callback", hint: "A function passed as an argument to another function" },
    { word: "async", hint: "Keyword for asynchronous functions" },
    { word: "event", hint: "An action that can be handled by a function" },
    { word: "object", hint: "Collection of properties and methods" },
    { word: "array", hint: "Ordered collection of values" },
    { word: "prototype", hint: "Mechanism for inheritance" },
    { word: "DOM", hint: "Document Object Model for interacting with HTML" },
    { word: "spread", hint: "Operator used to expand elements in arrays or objects" },
    { word: "map", hint: "Creates a new array by applying a function to each element" },
    { word: "filter", hint: "Creates a new array with elements that pass a test" },
    { word: "reduce", hint: "Applies a function to accumulate a single result from an array" },
    { word: "set", hint: "Collection of unique values" },
    { word: "get", hint: "Method to access a value from an object or array" },
    { word: "setTimeout", hint: "Sets a delay before executing a function" },
    { word: "setInterval", hint: "Repeatedly executes a function at specified intervals" },
    { word: "localStorage", hint: "Web storage that allows saving key-value pairs in the browser" },
    { word: "sessionStorage", hint: "Stores data for the duration of the page session" },
    { word: "JSON", hint: "JavaScript Object Notation, a lightweight data format" },
    { word: "symbol", hint: "Primitive data type used for unique identifiers" },
    { word: "this", hint: "Refers to the current execution context or object" },
    { word: "class", hint: "Blueprint for creating objects with shared properties and methods" },
    { word: "constructor", hint: "Special function used to initialize objects created from a class" },
    { word: "inheritance", hint: "Mechanism where one class can inherit methods and properties from another" },
    { word: "super", hint: "Used to call the parent class's constructor or methods" },
    { word: "module", hint: "Encapsulated code that can be imported and exported between files" },
    { word: "import", hint: "Used to bring in code from another module" },
    { word: "export", hint: "Used to make code available for use in other modules" },
    { word: "let", hint: "Block-scoped variable declaration" },
    { word: "const", hint: "Constant variable declaration" },
    { word: "var", hint: "Function-scoped variable declaration" },
    { word: "template literals", hint: "String literals allowing embedded expressions" },
    { word: "destructuring", hint: "Extracts values from arrays or objects into variables" },
    { word: "rest", hint: "Gathers remaining elements into an array" },
    { word: "default parameters", hint: "Assigns default values to function parameters" },
    { word: "spread operator", hint: "Expands elements of an array or object" },
    { word: "async/await", hint: "Syntax for handling asynchronous operations" },
    { word: "fetch", hint: "API for making network requests" },
    { word: "Promise.all", hint: "Waits for multiple promises to resolve" },
    { word: "callback hell", hint: "Nested callbacks that make code hard to read and maintain" },
    { word: "event listener", hint: "Method used to attach an event to an element" },
    { word: "document.querySelector", hint: "Selects the first element that matches a CSS selector" },
    { word: "document.querySelectorAll", hint: "Selects all elements that match a CSS selector" },
    { word: "node", hint: "An individual element in the DOM" },
    { word: "element", hint: "An HTML element represented as a node" },
    { word: "innerHTML", hint: "Gets or sets the HTML content of an element" },
    { word: "innerText", hint: "Gets or sets the text content of an element" },
    { word: "value", hint: "Gets or sets the value of form elements" },
    { word: "event.target", hint: "Refers to the element that triggered the event" },
    { word: "debounce", hint: "Delays the execution of a function until after a specified time" },
    { word: "throttle", hint: "Limits the number of times a function can be called" },
    { word: "regex", hint: "Regular expressions for pattern matching in strings" },
    { word: "try/catch", hint: "Used for exception handling" },
    { word: "finally", hint: "Block that runs after try/catch, regardless of error" }
  ],
  python: [
    { word: "tuple", hint: "An immutable sequence" },
    { word: "decorator", hint: "A function that modifies another function" },
    { word: "list", hint: "A mutable sequence of items" },
    { word: "dictionary", hint: "Key-value pair mapping" },
    { word: "lambda", hint: "Anonymous function defined with the lambda keyword",},
    { word: "module", hint: "File containing Python definitions and statements", },
    { word: "class", hint: "Defines a blueprint for objects" },
    { word: "iterator", hint: "Object with a next() method" },
    { word: "exception", hint: "Error handling mechanism" },
    { word: "comprehension", hint: "Concise way to create lists, sets, or dictionaries", },
  ],
  php: [
    { word: "echo", hint: "Outputs one or more strings" },
    { word: "array", hint: "A collection of values" },
    { word: "function", hint: "A block of code designed to perform a particular task",},
    { word: "class", hint: "Blueprint for creating objects" },
    { word: "namespace", hint: "Encapsulates items to avoid name collisions" },
    { word: "include", hint: "Includes and evaluates a specified file" },
    { word: "session", hint: "Stores data across multiple pages" },
    { word: "PDO", hint: "PHP Data Objects for database access" },
    { word: "trait", hint: "A mechanism for code reuse in single inheritance" },
    { word: "composer", hint: "Dependency manager for PHP" },
  ],
  react: [
    { word: "component", hint: "Reusable piece of UI" },
    { word: "hook", hint: "Special functions for state and lifecycle management",},
    { word: "jsx", hint: "JavaScript XML syntax" },
    { word: "props", hint: "Pass data to components" },
    { word: "state", hint: "Manages component data" },
    { word: "useEffect", hint: "Performs side effects in functional components", },
    { word: "context", hint: "Manages global state without prop drilling" },
    { word: "portal", hint: "Renders children into a DOM node outside of the parent", },
    { word: "redux", hint: "State management library" },
    { word: "fragment", hint: "Groups multiple elements without adding extra nodes", },
  ],
  nodejs: [
    { word: "event", hint: "Core aspect of Node.js non-blocking I/O" },
    { word: "npm", hint: "Package manager for Node.js" },
    { word: "express", hint: "Minimalist web framework for Node.js" },
    { word: "module", hint: "Encapsulated block of code" },
    { word: "buffer", hint: "Handles binary data" },
    {
      word: "callback",
      hint: "A function passed as an argument to another function",
    },
    {
      word: "middleware",
      hint: "Functions that execute during request-response cycles",
    },
    { word: "async", hint: "Keyword for asynchronous functions" },
    { word: "cluster", hint: "Module for handling multi-core systems" },
    { word: "fs", hint: "Module for interacting with the file system" },
  ],
  laravel: [
    { word: "artisan", hint: "Command-line tool for Laravel tasks" },
    { word: "eloquent", hint: "ORM for interacting with the database" },
    { word: "middleware", hint: "Filters HTTP requests" },
    { word: "migration", hint: "Manages database schema changes" },
    { word: "seeder", hint: "Populates the database with sample data" },
    { word: "controller", hint: "Handles HTTP requests and responses" },
    { word: "blade", hint: "Laravel's templating engine" },
    { word: "route", hint: "Defines URL mappings" },
    { word: "queue", hint: "Manages background jobs" },
    { word: "facade", hint: "Provides static-like interfaces to classes" },
  ],
};

function getWordList(language) {
  return wordLists[language] || [];
}
